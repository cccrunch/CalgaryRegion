@model  CalgaryHacks.Models.ViewModels.QuadrantModel

@{
    ViewBag.Title = "Calgary " + Model.Quadrant;
    Layout = "~/Views/Shared/_Layout.cshtml";


    var policeCount = Model.PointsOfInterests.Count(x => x.Type == "Police Station");
    var policeCountPerCapita = Model.Population / policeCount;

    var fireCount = Model.PointsOfInterests.Count(x => x.Type == "Fire Station");
    var fireCountPerCapita = Model.Population / fireCount;


    var communityCenterCount = Model.PointsOfInterests.Count(x => x.Type == "Community Center");
    var CommunityCenterCountPerCapita = Model.Population / communityCenterCount;


    var libraryCount = Model.PointsOfInterests.Count(x => x.Type == "Library");
    var libraryCountPerCapita = Model.Population / libraryCount;


    var cTrainCount = Model.PointsOfInterests.Count(x => x.Type == "CTrain");
    var cTrainCountPerCapita = Model.Population / cTrainCount;

    var currentEventsCount = Model.Events.Count();
    var currentEventsPerCapita = Model.Population / currentEventsCount;

    var totalScore = (currentEventsPerCapita + cTrainCountPerCapita + libraryCountPerCapita + CommunityCenterCountPerCapita + fireCountPerCapita + policeCountPerCapita) / 10000;

}



<!DOCTYPE html>
<head>
    <style>
        #map {
            height: 400px;
            width: 100%;
        }

        ul.breadcrumb {
            padding: 10px 16px;
            list-style: none;
            background-color: #eee;
        }

            ul.breadcrumb li {
                display: inline;
                font-size: 18px;
            }

                ul.breadcrumb li + li:before {
                    padding: 8px;
                    color: black;
                    content: "/\00a0";
                }

                ul.breadcrumb li a {
                    color: #0275d8;
                    text-decoration: none;
                }

                    ul.breadcrumb li a:hover {
                        color: #01447e;
                        text-decoration: underline;
                    }
    </style>
</head>
<body>
    <h3>Calgary @Model.Quadrant</h3>

    <ul class="breadcrumb">


        <li><a href="@Url.Action("Analytics", "Home")">Calgary</a></li>
        <li><a href="@Url.Action("Quadrants", "Home", new {quadrant = "NE"})">NE</a></li>
        <li><a href="@Url.Action("Quadrants", "Home", new {quadrant = "NW"})">NW</a></li>
        <li><a href="@Url.Action("Quadrants", "Home", new {quadrant = "SW"})">SW</a></li>
        <li><a href="@Url.Action("Quadrants", "Home", new {quadrant = "SE"})">SE</a></li>
        <li><a href="@Url.Action("Heatmap", "Home")">HeatMap</a></li>

    </ul>

    <div id="map"></div>
<div class="container">
    <h2>Analytics Information</h2>
    <p>The population in the @Model.Quadrant is:</p>            
    
    <!--Population Data-->
    <table class="table table-striped">
    <thead>
    <tr>
        <th>Population</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td>@Model.Population</td>
        </tr>
        </tbody>
    </table>


    <table class="table table-striped">
        <thead>
        <tr>
            <th>Services</th>
            <th>Amount</th>
            <th>Aggregate (Population Per Service)</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>Police Stations</td>
            <td>@policeCount</td>
            <td>@policeCountPerCapita</td>
        </tr>
        <tr>
            <td>Fire Stations</td>
            <td>@fireCount</td>
            <td>@fireCountPerCapita</td>
        </tr>
        <tr>
            <td>Recreational/Community Centers</td>
            <td>@communityCenterCount</td>
            <td>@CommunityCenterCountPerCapita</td>
        </tr>
            
        <tr>
            <td>LRT Station</td>
            <td>@cTrainCount</td>
            <td>@cTrainCountPerCapita</td>
        </tr>
            
        <tr>
            <td>Libraries</td>
            <td>@libraryCount</td>
            <td>@libraryCountPerCapita</td>
        </tr>
            
            
        <tr>
            <td>Current Events</td>
            <td>@currentEventsCount</td>
            <td>@currentEventsPerCapita</td>
        </tr>
            
        <tr>
            <td></td>
            <td></td>
           
            <td><b>Total Score:    </b>@totalScore</td>
        </tr>


        </tbody>
    </table>
</div>

<script>
    var map;
    var dim = 25;
    var iconSize;
    var icons;

    function initMap() {
        iconSize = new google.maps.Size(dim, dim);
        icons = {
            CTrain: {
                url: '../images/LRTStation.png',
                scaledSize: iconSize
            },
            Library: {
                url: '../images/PublicLibrary.png',
                scaledSize: iconSize
            },
            CommunityCenter: {
                url: '../images/CommunityCentre.png',
                scaledSize: iconSize
            },
            PoliceStation: {
                url: '../images/PoliceStation.png',
                scaledSize: iconSize
            },
            OutdoorPool: {
                url: '../images/Pool.png',
                scaledSize: iconSize
            },
            Arena: {
                url: '../images/Arena.png',
                scaledSize: iconSize
            },
            FireStation: {
                url: '../images/FireStation.png',
                scaledSize: iconSize
            }
        };
        //need to change this

        var calgaryMap = { lat: @Model.Lat, lng: @Model.Lng };
        map = new google.maps.Map(document.getElementById('map'),
            {
                zoom: 12,
                center: calgaryMap
            });

        var infowindow = new google.maps.InfoWindow();


        @foreach (var pointOfInterest in Model.PointsOfInterests.Where(x => x.Type == "Police Station" || x.Type == "Arena" || x.Type == "Fire Station" || x.Type == "Library" || x.Type =="CTrain" || x.Type == "Outdoor Pool"))
        {
            <text>
                var myLatLng = { lat: @pointOfInterest.Latitude, lng: @pointOfInterest.Longitude };
                var contentPOI = '@pointOfInterest.Name' + ' @pointOfInterest.Type';


                var marker = new google.maps.Marker(
                    {
                        position: myLatLng,
                        map: map,
                        icon: icons.@Html.Raw(@pointOfInterest.Type.Replace(" ", ""))
                    });

                google.maps.event.addListener(marker,
                    'click',
                    (function(marker, contentPOI) {
                        return function() {
                            infowindow.setContent(contentPOI);
                            infowindow.open(map, marker);
                        }
                    })(marker, contentPOI));

            </text>

        }


        //Event Markers
        @foreach (var eventModel in Model.Events)
        {
            <text>
                var myLatLng = { lat: @eventModel.Latitude, lng: @eventModel.Longitude };
                var contentPOI = '@eventModel.Name' + ' @eventModel.Type';


                var marker = new google.maps.Marker(
                    {
                        position: myLatLng,
                        map: map,

                    });

                google.maps.event.addListener(marker,
                    'click',
                    (function(marker, contentPOI) {
                        return function() {
                            infowindow.setContent(contentPOI);
                            infowindow.open(map, marker);
                        }
                    })(marker, contentPOI));

            </text>

        }


    }
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCi84qEblX_oHY4fLUW8pjliIsrXZJs3eI&callback=initMap">
    </script>
</body>
