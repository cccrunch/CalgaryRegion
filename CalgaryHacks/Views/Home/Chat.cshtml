@model CalgaryHacks.Models.ViewModels.ChatModel

@{
    ViewBag.Title = "Chat";
}
<input type="hidden" id="displayname" value="@Model.User.Name" />
<input type="hidden" id="userid" value="@Model.CurrentEvent.Id" />
<input type="hidden" id="currentRoom" value="@ViewBag.roomId" />
<h3>@Model.CurrentEvent.Name</h3>
<h5><span class="glyphicon glyphicon-time"></span> @String.Format("{0:f}", Model.CurrentEvent.EventDate) , @Model.CurrentEvent.Address</h5>
<p>More Information: <a href="@Model.CurrentEvent.URL"> Click here for more information!</a></p>

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3">
            <div style="background-color: lightgray; border:hidden; border-radius:5px; border-color:lightgray">
                <strong>Current Users:</strong>
                <div readonly id="users">
                </div>
            </div>
            <div class="text-right">
                @Html.ActionLink("Leave Chat", "Index", "Home", new { @class = "btn btn-danger btn-block" })
            </div>
        </div>
        <div class="col-sm-9">
            <div style="border:solid; border-radius:5px; border-color:lightgray">
                <div id="chatbox" style="height: 300px; overflow: auto; word-wrap: break-word">
                    <span id="discussion"></span>
                    <br />
                </div>
            </div>

            <div class="input-group" id="sendMessageText">
                 <input class="form-control" id="message" placeholder="Type Message Here" />
                 <span class="input-group-btn">           
                    <button class="btn btn-secondary btn-group-lg" id="sendmessage" type="button">Send</button>
                 </span>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(document).ready(function () {
            $('#message').keypress(function (e) {
                if (e.keyCode == 13)
                    $('#sendmessage').click();
            });
        });

        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<span class="chat-messages"><strong>' +
                    htmlEncode(name) +
                    '</strong>: ' +
                    htmlEncode(message) +
                    '</span><br/>');

                var elem = document.getElementById('chatbox');
                elem.scrollTop = elem.scrollHeight;
            };

            chat.client.displayAllUsers = function (users) {
                $('#users').html("");
                for (var i = 0; i < users.length; i++) {
                    $('#users').append(users[i] + "<br/>");
                }
            };

            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {

                chat.server.groupconnect($('#displayname').val(), $('#currentRoom').val());

                $('#sendmessage').click(function () {
                    var message = $('#message').val();
                    if (message) {
                        // Call the Send method on the hub.
                        chat.server.sendgroup($('#displayname').val(), $('#message').val(), $('#currentRoom').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    }
                });
            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
